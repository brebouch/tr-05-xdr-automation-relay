{
  "workflow": {
    "unique_name": "definition_workflow_01UELI0JEFI1O1VAmziT2c0wKo7TGRxeV1b",
    "name": "SXO Relay Create Metric Tile",
    "title": "SXO Relay Create Metric Tile",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Tile",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01VGV8Y53R68J0AHZkNcEzYNIudFwzqUZxZ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "tabletype_01UELHRQLYPHG4D61vZ7CqdQIi6yTHYnZaj",
        "properties": {
          "value": [
            {
              "column_data": {
                "icon": "device-type",
                "link": "cisco.com",
                "metric_value": 1000,
                "title": "test metric"
              }
            },
            {
              "column_data": {
                "icon": "object",
                "link": "cnn.com",
                "metric_value": 1300,
                "title": "cnn metric"
              }
            }
          ],
          "scope": "input",
          "name": "Metric Tile Data",
          "type": "datatype.table",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01VGTPCBC5EMN4oocH2WJM94vJXaNLe3dtE",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "SXO Relay Module",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "display_name": "SXO Relay Create Metric Tile",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "no_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01VGTPG1DS3QE1QzidLXYwCxAG7ZJCsOLwe",
        "name": "Select from Table",
        "title": "Select from Table",
        "type": "core.selectfromtable",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Select from Table",
          "input_table": "$workflow.definition_workflow_01UELI0JEFI1O1VAmziT2c0wKo7TGRxeV1b.input.variable_workflow_01VGTPCBC5EMN4oocH2WJM94vJXaNLe3dtE$",
          "number_of_rows": {
            "all_rows": true
          },
          "persist_output": false,
          "skip_execution": false,
          "sorting": {
            "no_sort": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01VGTMCU2O5ZK51bGipPY2xIHkCqWy7uJay",
        "name": "Execute Python Script",
        "title": "Execute Python Script",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Execute Python Script",
          "script": "import json\nfrom datetime import datetime, timedelta\n\nicon_types = [\n    'device-type',\n    'bulleted-list',\n    'label-group',\n    'static-nat',\n    'information',\n    'warning',\n    'critical-stop',\n    'object',\n    'vpn',\n    'user',\n    'view-metadata',\n    'umbrella',\n    'block'\n]\n\nclass MetricTile:\n\n    def set_time(self, offset):\n        return {\n            'start_time': str(datetime.now().strftime(\"%Y-%m-%dT%H:%M:%S.%fZ\")),\n            'end_time': str((datetime.now() + timedelta(hours=offset)).strftime(\"%Y-%m-%dT%H:%M:%S.%fZ\"))\n\n        }\n\n    def get_tile_model(self):\n        return {\n            'valid_time': self.set_time(1),\n            'observed_time': self.set_time(1),\n            'cache_scope': 'org',\n            'data': []\n        }\n\n    def set_metric_tile_data(self, label, icon, link, value):\n        if icon not in icon_types:\n            icon = 'device-type'\n        self.mod['data'].append({\n            'value': value,\n            'value-unit': 'integer',\n            'icon': icon,\n            'link_uri': link,\n            'label': label\n        })\n\n    def __init__(self, metric_tile):\n        self.mod = self.get_tile_model()\n        for m in metric_tile:\n            self.set_metric_tile_data(m['title'], m['icon'], m['link'], m['metric_value'])\n\n\ndata = $activity.definition_activity_01VGTPG1DS3QE1QzidLXYwCxAG7ZJCsOLwe.output.response_body$\n\nmetric_tile = MetricTile(data)\ntile = json.dumps(metric_tile.mod)",
          "script_queries": [
            {
              "script_query": "tile",
              "script_query_name": "tile",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01VGV8KGL79TI2fDejaUO9kJHjFAtnInFoK",
        "name": "Set Variables",
        "title": "Set Output",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Set Output",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_01UELI0JEFI1O1VAmziT2c0wKo7TGRxeV1b.output.variable_workflow_01VGV8Y53R68J0AHZkNcEzYNIudFwzqUZxZ$",
              "variable_value_new": "$activity.definition_activity_01VGTMCU2O5ZK51bGipPY2xIHkCqWy7uJay.output.script_queries.tile$"
            }
          ]
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "table_types": {
    "tabletype_01UELHRQLYPHG4D61vZ7CqdQIi6yTHYnZaj": {
      "unique_name": "tabletype_01UELHRQLYPHG4D61vZ7CqdQIi6yTHYnZaj",
      "data_type": "datatype.tabletype",
      "display_name": "SXO Relay Metric Data Tile",
      "columns": [
        {
          "is_required": true,
          "name": "metric_value",
          "title": "metric_value",
          "type": "integer"
        },
        {
          "is_required": true,
          "name": "title",
          "title": "title",
          "type": "string"
        },
        {
          "is_required": true,
          "name": "icon",
          "title": "icon",
          "type": "string"
        },
        {
          "is_required": true,
          "name": "link",
          "title": "link",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  }
}